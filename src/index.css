@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;700&display=swap');
@import "tailwindcss";
@config "../tailwind.config.ts";

/* @import "tailwindcss/preflight"; */

@theme {
  --font-sans: "Poppins", sans-serif;
  
  /* Custom font sizes */
  --font-size-h1: 52px;
  --font-size-h2: 40px;
  --font-size-h3: 24px;
  --font-size-h4: 20px;
  --font-size-body-lg: 16px;
  --font-size-body-md: 14px;
  --font-size-body-sm: 12px;
}

@import "tailwindcss/utilities";

/* Force Tailwind to include these classes by using them in a comment */
/* bg-brown-300 text-brown-600 bg-brown-600 text-brown-300 */
/* text-h1 text-h2 text-h3 text-h4 text-body-lg text-body-md text-body-sm */

/* Textarea Resize Handle Styling */
.textarea-resize-hint {
  position: relative;
  display: inline-block;
  width: 100%;
}

/* Hide native resize handle */
.textarea-resize-hint textarea::-webkit-resizer {
  display: none;
}

/* Custom resize handle - Line 1 (longer, left side) */
.textarea-resize-hint::before {
  content: "";
  position: absolute;
  right: 8px;
  bottom: 22px;
  width: 20px;
  height: 1px;
  background-color: #DAD6D1;
  transform: rotate(-45deg);
  transform-origin: center;
  pointer-events: none;
  z-index: 10;
}

/* Custom resize handle - Line 2 (shorter, right side) */
.textarea-resize-hint::after {
  content: "";
  position: absolute;
  right: 8px;
  bottom: 18px;
  width: 12px;
  height: 1px;
  background-color: #DAD6D1;
  transform: rotate(-45deg);
  transform-origin: center;
  pointer-events: none;
  z-index: 10;
}

/* Markdown Content Styles */
.markdown {
  font-size: 16px;
  font-weight: 400;
}

.markdown :is(h2) {
  margin-top: 32px;
  margin-bottom: 12px;
  font-size: 20px;
  font-weight: 600;
}

.markdown :is(h3, h4, h5, h6) {
  margin-top: 32px;
  margin-bottom: 12px;
  font-size: 18px;
  font-weight: bold;
}

.markdown p:not(:is(h2, h3, h4, h5, h6) + p) {
  margin-top: 22px;
}

.markdown :is(ul, ol) {
  list-style-position: outside;
}

.markdown :is(ul) {
  list-style-type: "â€¢";
}

.markdown :is(ol) {
  list-style-type: decimal;
  padding-left: 20px;
}

.markdown :is(a) {
  text-decoration: underline;
}

.markdown :is(a):hover {
  text-decoration: underline;
  color: #726d67;
  cursor: pointer;
}

.markdown :is(ul) li {
  margin-block: 8px;
  padding-inline-start: 8px;
  padding-left: 5px;
  margin-left: 10px;
}

.markdown :is(ol) li {
  margin-block: 8px;
  padding-inline-start: 8px;
  padding-left: 3px;
  margin-left: 10px;
}

.markdown :is(blockquote) {
  border-left: 3px solid #26231e;
  margin: 1.5em 10px;
  padding-left: 10px;
  font-style: italic;
}

.markdown :is(hr) {
  border: none;
  border-top: 2.5px solid #d1d5db;
  margin: 1.5em 0;
  width: 30%;
}

.markdown img {
  display: block;
  width: 100%;
  height: auto;
  margin: 2em 0;
  border-radius: 12px;
}

/* Article Detail Specific Styles */
.article-detail {
  max-width: 896px;
  margin: 0 auto;
  padding: 2rem 1rem;
}

.article-title {
  font-size: 2.5rem;
  font-weight: 700;
  color: #1a1a1a;
  margin-bottom: 1.5rem;
  line-height: 1.2;
  text-align: center;
}

@media (min-width: 768px) {
  .article-title {
    font-size: 3rem;
  }
}

.article-meta {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 1rem;
  color: #8b7355;
  margin-bottom: 2rem;
}

.article-image {
  width: 100%;
  height: 16rem;
  object-fit: cover;
  border-radius: 0.5rem;
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
  margin-bottom: 2rem;
}

@media (min-width: 768px) {
  .article-image {
    height: 24rem;
  }
}

.social-sharing {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1.5rem 0;
  border-top: 1px solid #d2d2d2;
  border-bottom: 1px solid #d2d2d2;
  margin-bottom: 2rem;
}

.comment-section {
  margin-bottom: 3rem;
}

.comment-input {
  display: flex;
  gap: 1rem;
  margin-bottom: 2rem;
}

.comment-list {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.comment-item {
  display: flex;
  gap: 1rem;
}

.comment-avatar {
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 50%;
  object-fit: cover;
}

.comment-content {
  flex: 1;
}

.comment-author {
  font-weight: 600;
  color: #1a1a1a;
}

.comment-date {
  color: #8b7355;
  font-size: 0.875rem;
}

.comment-text {
  color: #4a4a4a;
}

/* Article Detail Layout Updates */
.article-metadata {
  display: flex;
  align-items: center;
  gap: 1rem;
  margin-bottom: 1.5rem;
}

.category-tag {
  padding: 0.25rem 0.75rem;
  border-radius: 9999px;
  font-size: 0.875rem;
  font-weight: 600;
}

.category-cat {
  background-color: #dcfce7;
  color: #166534;
}

.category-general {
  background-color: #f3f4f6;
  color: #374151;
}

.category-inspiration {
  background-color: #fb923c;
  color: white;
}

/* Article Detail Image Responsive */
.article-image-container {
  margin-left: -1rem;
  margin-right: -1rem;
  margin-top: 60px;
  margin-bottom: 48px;
}

@media (min-width: 768px) {
  .article-image-container {
    margin-left: 0;
    margin-right: 0;
  }
}

.article-image {
  width: 100%;
  height: 184px;
  object-fit: cover;
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
  border-radius: 16px;
}

@media (min-width: 768px) {
  .article-image {
    height: 587px;
  }
}

/* Author Blog Card - removed to use Tailwind classes directly in component */

/* Article Title Layout */
.article-title-layout {
  display: flex;
  flex-direction: column;
  gap: 2rem;
  margin-bottom: 0;
}

@media (min-width: 1024px) {
  .article-title-layout {
    flex-direction: row;
    gap: 80px; /* space between left column and sidebar */
    align-items: flex-start;
  }
}

/* Left Column: Title + Content */
.article-left-column {
  flex: 1;
  max-width: 815px;
  width: 100%;
}

/* Author Blog Sidebar */
.author-blog-sidebar {
  width: 100%;
  position: static;
}

@media (min-width: 1024px) {
  .author-blog-sidebar {
    width: 305px;
    position: sticky;
    top: 2rem; /* spacing from top */
    align-self: flex-start;
    height: fit-content;
    flex-shrink: 0;
  }
}

@media (max-width: 1023px) {
  .article-title-layout {
    gap: 2rem;
  }
}

/* Global cursor pointer for interactive elements */
button,
a,
[role="button"],
[type="button"],
[type="submit"],
[type="reset"],
input[type="checkbox"],
input[type="radio"],
select,
.cursor-pointer {
  cursor: pointer;
}

button:disabled,
[disabled] {
  cursor: not-allowed;
}